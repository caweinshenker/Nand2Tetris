// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    Not   (in=load, out=notload);
    Or    (a=load, b=notload, out=one);
    Not16 (in=in, out=notin16);
    And16 (a=in, b=notin16, out=zeromask);

    Register (in=mux3, load=one, out=r1, out=out);
    Inc16 (in=r1, out=r1plus1);
    Mux16 (a=r1, b=r1plus1, sel=inc, out=mux1);
    Mux16 (a=mux1, b=in, sel=load, out=mux2);
    Mux16 (a=mux2, b=zeromask, sel=reset, out=mux3);

    /*


    Inc16 (in=zeromask, out=one16);

    ALU (x=reg, y=one16, zx=reset, nx=zero, zy=inc, ny=zero,  )*/

    /*Not16 (in=in, out=notin);
    And16 (a=in, b=notin, out=zeromask);


    Mux16 (a=reg, b=in, sel=load, out=loadmux);


    Inc16 (in=in,  out=inplus1);
    Inc16 (in=reg, out=regplus1);*/


}
