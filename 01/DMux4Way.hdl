// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    //Create tmps for the result of muxing the on sel[0].
    //Note that muxing on the first bit separates us into cases where the remaining
    //possibilities are either (a or c) or (b or d)
    // (i.e., getting {in, 0} from the first mux means we still need to figure
    //out whether sel == 00 or sel == 10.
    //Muxing over the second bit of sel tells us which of either a or c needs to receive in.
    DMux (in=in, sel=sel[0], a=t1, b=t2);
    DMux (in=t1, sel=sel[1], a=a, b=c);
    DMux (in=t2, sel=sel[1], a=b, b=d);
  }
